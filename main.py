import telebot
import json
import schedule
import time
from config import token
from pybit.unified_trading import HTTP
bot = telebot.TeleBot(token)


class API:
    def __init__(self):
        self.session = HTTP(testnet=False)
        self.last_price = 0
        self.procent = 0

    def get_not_price(self):
        price = self.session.get_tickers(
            category="inverse",
            symbol="NOTUSDT")['result']['list'][0]['indexPrice']
        return float(price)

    def check_change_price(self, chat_id):
        with open('info.json', 'r') as file:
            info = json.load(file)
        price_now = self.get_not_price()
        change = (price_now / info['last_price'] - 1) * 100
        if abs(change) >= info['procent']:
            with open('info.json', 'w') as file:
                json.dump({'procent': info['procent'], "last_price": price_now}, file)
            if change > 0:
                send_up(change, price_now, chat_id)
            else:
                send_down(abs(change), price_now, chat_id)


api = API()


@bot.message_handler(commands=['start'])
def welcome(message):
    bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, –¥–æ—Ä–æ–≥–æ–π –¥—Ä—É–≥. –Ø - –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –ø–æ–º–æ—á—å —Å–ª–µ–¥–∏—Ç—å –∑–∞ –¥–≤–∏–∂–µ–Ω–∏–µ–º —Ü–µ–Ω—ã NOTCOIN, '
                     '—á—Ç–æ –ø–æ–∑–≤–æ–ª–∏—Ç —Å–¥–µ–ª–∞—Ç—å —Ç–æ—Ä–≥–æ–≤–ª—é –∏–º –±–µ–∑–æ–ø–∞—Å–Ω–µ–µ\nüî∏ /help - –≤—ã–∑–≤–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥\n'
                                      'üî∏ /check - –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –¥–≤–∏–∂–µ–Ω–∏–µ –∫—É—Ä—Å–∞ NOT\nüî∏ /price - —É–∑–Ω–∞—Ç—å —Ç–µ–∫—É—â—É—é —Ü–µ–Ω—É NOT'
                                      '\nüî∏ /trade - —Å–æ–≤–µ—Ä—à–∏—Ç—å —Å–¥–µ–ª–∫—É (–Ω–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)')


@bot.message_handler(commands=['help'])
def help(message):
    bot.send_message(message.chat.id, '–í–æ—Ç —Å–ø–∏—Å–æ–∫ –º–æ–∏—Ö –∫–æ–º–∞–Ω–¥:\nüî∏ /help - –≤—ã–∑–≤–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥\n'
                                      'üî∏ /check - –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –¥–≤–∏–∂–µ–Ω–∏–µ –∫—É—Ä—Å–∞ NOT\nüî∏ /price - —É–∑–Ω–∞—Ç—å —Ç–µ–∫—É—â—É—é —Ü–µ–Ω—É NOT'
                                      '\nüî∏ /trade - —Å–æ–≤–µ—Ä—à–∏—Ç—å —Å–¥–µ–ª–∫—É (–Ω–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)')


@bot.message_handler(commands=['price'])
def price(message):
    bot.send_message(message.chat.id, f'‚úàÔ∏è –¢–µ–∫—É—â–∏–π –∫—É—Ä—Å NOT: {api.get_not_price()} USDT')


@bot.message_handler(commands=['check'])
def check(message):
    k = bot.send_message(message.chat.id, 'üìà –ú–æ–Ω–µ—Ç–∞ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è: NOT\n–ù–∞–ø–∏—à–∏ –ø—Ä–æ—Ü–µ–Ω—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ü–µ–Ω—ã, '
                                          '–∫–æ—Ç–æ—Ä—ã–π —Ç—ã —Ö–æ—á–µ—à—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å.\n–ù–æ –∑–∞–ø–æ–º–Ω–∏:')
    bot.register_next_step_handler(k, check2)
    stick = open('stickers/norisk.webp', 'rb')
    bot.send_sticker(message.chat.id, stick)


def check2(message):
    if message.text is None:
        k = bot.send_message(message.chat.id, 'üò° –¢—ã —á–µ —Ç—É–ø–æ–π —á—Ç–æ –ª–∏? –ù–∞–ø–∏—à–∏ –ß–ò–°–õ–û > 0')
        bot.register_next_step_handler(k, check2)
    else:
        if message.text.replace(".", "", 1).isdigit() and float(message.text) > 0:
            procent = float(message.text)
            last_price = api.get_not_price()
            with open('info.json', 'w') as file:
                json.dump({'procent': procent, "last_price": last_price}, file)
            bot.send_message(message.chat.id,
                             f'–°—É–ø–µ—Ä! –¢–µ–ø–µ—Ä—å —è –±—É–¥—É –æ–ø–æ–≤–µ—â–∞—Ç—å —Ç–µ–±—è —Å—Ä–∞–∑—É, –∫–∞–∫ —Ç–æ–ª—å–∫–æ —Ü–µ–Ω–∞ NOT –∏–∑–º–µ–Ω–∏—Ç—Å—è –Ω–∞ {procent} %')
            work(message.chat.id)

        else:
            k = bot.send_message(message.chat.id, 'üò° –¢—ã —á–µ —Ç—É–ø–æ–π —á—Ç–æ –ª–∏? –ù–∞–ø–∏—à–∏ –ß–ò–°–õ–û > 0')
            bot.register_next_step_handler(k, check2)


def send_up(change, price_now, chat_id):
    bot.send_message(chat_id, f'üü¢ –¶–µ–Ω–∞ NOT –∏–∑–º–µ–Ω–∏–ª–∞—Å—å –Ω–∞ +{change} %. –¢–µ–∫—É—â–∏–π –∫—É—Ä—Å: {price_now}')


def send_down(change, price_now, chat_id):
    bot.send_message(chat_id, f'üî¥ –¶–µ–Ω–∞ NOT –∏–∑–º–µ–Ω–∏–ª–∞—Å—å –Ω–∞ -{change} %. –¢–µ–∫—É—â–∏–π –∫—É—Ä—Å: {price_now}')


def work(chat_id):
    schedule.every().second.do(api.check_change_price, chat_id)
    while True:
        schedule.run_pending()
        time.sleep(1)


bot.polling(none_stop=True)